const ApplicationForm = ({ application, onSave, onClose }) => {
    const [formData, setFormData] = useState({
        company: application?.company || '', title: application?.title || '', status: application?.status || 'Applied',
        deadline: application?.deadline ? application.deadline.split('T')[0] : '',
        followUpDate: application?.followUpDate ? application.followUpDate.split('T')[0] : '',
        jobLink: application?.jobLink || '', source: application?.source || 'LinkedIn', salary: application?.salary || '',
        notes: application?.notes || '', jobDescription: application?.jobDescription || '', resumeVersion: application?.resumeVersion || '',
        contactName: application?.contactName || '', contactEmail: application?.contactEmail || '',
        resumeText: application?.resumeText || ''
    });
    const modalRef = useRef();
    useEffect(() => { const handleClickOutside = (event) => { if (modalRef.current && !modalRef.current.contains(event.target)) { onClose(); } }; document.addEventListener("mousedown", handleClickOutside); return () => { document.removeEventListener("mousedown", handleClickOutside); }; }, [onClose]);
    const handleChange = (e) => { const { name, value } = e.target; setFormData(prev => ({ ...prev, [name]: value })); };
    const handleSubmit = (e) => { e.preventDefault(); const deadlineISO = formData.deadline ? new Date(formData.deadline).toISOString() : ''; const followUpISO = formData.followUpDate ? new Date(formData.followUpDate).toISOString() : ''; onSave({ ...formData, deadline: deadlineISO, followUpDate: followUpISO }); };
    const statusOptions = ['Pending', 'Applied', 'Recruiter Screen', 'Aptitude Test(Online)', 'Aptitude Test(Offline)', 'FGD', 'Presentation', 'Interviewing', 'Offer', 'Rejected', 'Ghosted'];
    const sourceOptions = ['LinkedIn', 'Company Website', 'Referral', 'Job Board', 'Recruiter', 'Other'];
    return (
        <div className="fixed inset-0 bg-black bg-opacity-50 z-50 flex justify-center items-center p-4"><div ref={modalRef} className="bg-white rounded-lg shadow-2xl w-full max-w-3xl max-h-full overflow-y-auto"><form onSubmit={handleSubmit}><div className="p-6"><h2 className="text-2xl font-bold mb-6">{application ? 'Edit Application' : 'Add New Application'}</h2><div className="grid grid-cols-1 md:grid-cols-2 gap-6"><div><label htmlFor="company" className="block text-sm font-medium text-gray-700">Company</label><input type="text" name="company" id="company" value={formData.company} onChange={handleChange} required className="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"/></div><div><label htmlFor="title" className="block text-sm font-medium text-gray-700">Job Title</label><input type="text" name="title" id="title" value={formData.title} onChange={handleChange} required className="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"/></div><div><label htmlFor="status" className="block text-sm font-medium text-gray-700">Status</label><select name="status" id="status" value={formData.status} onChange={handleChange} className="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">{statusOptions.map(opt => <option key={opt} value={opt}>{opt}</option>)}</select></div><div><label htmlFor="deadline" className="block text-sm font-medium text-gray-700">Application Deadline</label><input type="date" name="deadline" id="deadline" value={formData.deadline} onChange={handleChange} className="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"/></div><div><label htmlFor="followUpDate" className="block text-sm font-medium text-gray-700">Follow-up On</label><input type="date" name="followUpDate" id="followUpDate" value={formData.followUpDate} onChange={handleChange} className="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"/></div><div><label htmlFor="source" className="block text-sm font-medium text-gray-700">Source</label><select name="source" id="source" value={formData.source} onChange={handleChange} className="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">{sourceOptions.map(opt => <option key={opt} value={opt}>{opt}</option>)}</select></div><div className="md:col-span-2"><label htmlFor="jobLink" className="block text-sm font-medium text-gray-700">Job Posting Link</label><input type="url" name="jobLink" id="jobLink" value={formData.jobLink} onChange={handleChange} className="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"/></div><div><label htmlFor="contactName" className="block text-sm font-medium text-gray-700">Contact Name</label><input type="text" name="contactName" id="contactName" value={formData.contactName} onChange={handleChange} className="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"/></div><div><label htmlFor="contactEmail" className="block text-sm font-medium text-gray-700">Contact Email</label><input type="email" name="contactEmail" id="contactEmail" value={formData.contactEmail} onChange={handleChange} className="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"/></div><div className="md:col-span-2"><label htmlFor="resumeVersion" className="block text-sm font-medium text-gray-700">Resume/Cover Letter Version</label><input type="text" name="resumeVersion" id="resumeVersion" value={formData.resumeVersion} onChange={handleChange} className="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"/></div><div className="md:col-span-2"><label htmlFor="notes" className="block text-sm font-medium text-gray-700">Notes</label><textarea name="notes" id="notes" rows="3" value={formData.notes} onChange={handleChange} className="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"></textarea></div><div className="md:col-span-2"><label htmlFor="jobDescription" className="block text-sm font-medium text-gray-700">Job Description</label><textarea name="jobDescription" id="jobDescription" rows="5" value={formData.jobDescription} onChange={handleChange} className="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"></textarea></div><div className="md:col-span-2"><label htmlFor="resumeText" className="block text-sm font-medium text-gray-700">My Master Resume</label><textarea name="resumeText" id="resumeText" rows="5" value={formData.resumeText} onChange={handleChange} className="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm" placeholder="Paste your master resume here for AI analysis..."></textarea></div></div></div><div className="bg-gray-50 px-6 py-4 flex justify-end space-x-3"><button type="button" onClick={onClose} className="bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50">Cancel</button><button type="submit" className="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700">Save Application</button></div></form></div></div>
    );
};
